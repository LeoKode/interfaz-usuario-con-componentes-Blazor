@page "/"

<!-- Inyecta un servicio HttpClient para realizar solicitudes HTTP.-->
@inject HttpClient HttpClient
<!--Inyecta NavigationManager para obtener información de navegación y la URL base.-->
@inject NavigationManager NavigationManager

<div class="main">
    <h1>Blazing Pizzas</h1>
    <ul class="pizza-cards">
        @if (specials != null)
        {
            @foreach (var special in specials)
            {
                <li style="background-image: url('@special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                        @special.Description
                        <span class="price">@special.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>

@code {
    List<PizzaSpecial> specials = new();

    /* Este código ha reemplazado OnInitialized() por OnInitializedAsync(). Las especiales se van a devolver ahora 
    como JSON desde la aplicación de forma asincrónica.*/
    protected override async Task OnInitializedAsync()
    {
        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>(NavigationManager.BaseUri + "specials");
    }
}
		